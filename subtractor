module half_subtractor(
    input A, B,
    output D, B_out
);
    assign D = A ^ B;           // Difference
    assign B_out = ~A & B;      // Borrow
endmodule

module full_subtractor(
    input A, B, B_in,
    output D, B_out
);
    wire D1, B1, B2;
    
    half_subtractor HS1 (A, B, D1, B1);     // First half subtractor
    half_subtractor HS2 (D1, B_in, D, B2);  // Second half subtractor
    assign B_out = B1 | B2;                 // Final borrow
endmodule

module Subtractor(
    input [3:0] A, B,
    output [3:0] D,
    output B_out
);
    wire B1, B2, B3;  // Intermediate borrow wires

    // LSB subtraction using half subtractor
    half_subtractor HS (A[0], B[0], D[0], B1);

    // Subsequent bits subtraction using full subtractors
    full_subtractor FS1 (A[1], B[1], B1, D[1], B2);
    full_subtractor FS2 (A[2], B[2], B2, D[2], B3);
    full_subtractor FS3 (A[3], B[3], B3, D[3], B_out);

endmodule
