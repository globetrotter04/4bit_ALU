module Adder(
    input [3:0] a,b,
    
    output [3:0] sum,
    output carry_out
    );
    wire [3:0] sum_temp1;
    wire binary_carry;
    
        full_adder FA1(a[0],b[0],0,sum_temp1[0],carry1);
        full_adder FA2(a[1],b[1],carry1,sum_temp1[1],carry2);
        full_adder FA3(a[2],b[2],carry2,sum_temp1[2],carry3);
        full_adder FA4(a[3],b[3],carry3,sum_temp1[3],carry_out);
endmodule

module full_adder(
    input a,b,cin,
    output sum,carry
    );
 wire s1,c1,c2;
 half_adder HA1(a,b,s1,c1);
 half_adder HA2(s1,cin,sum,c2);
 or(carry,c1,c2);
endmodule

module half_adder(
    input a,b,
    output sum,carry
    );
    assign sum = a^b;
    assign carry = a&b;
    
endmodule
